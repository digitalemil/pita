apiVersion: apps/v1
kind: Deployment
metadata:
  name: pita
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pita
      component: appserver  
  template:
    metadata:
      name: pita
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '_status/vars'
        prometheus.io/port: '3000'       
      labels:
        app: pita
        component: appserver  
    spec:
      containers:
      - name: pita
        image: digitalemil/sourdough:pita-vlatest
        imagePullPolicy: Always
        env:
        - name: PORT
          value: "3000"
        - name: ENV
          value: "PROD"
        - name: LOGFOLDER
          value: "$LOGFOLDER"
        - name: DATABASE_CONNECTIONSTRING
          value: "$DATABASE_CONNECTIONSTRING"
        - name: CODE
          value: "$CODE"
        - name: APP
          value: "pita"
        - name: METRICSUSER
          value: "$METRICSUSER"
        - name: METRICSPASSWORD
          value: "$METRICSPASSWORD"
        - name: METRICSPOINT
          value: "$METRICSENDPOINT"
        - name: LOGSUSER
          value: "$LOGSUSER"
        - name: LOGSPASSWORD
          value: "$LOGSPASSWORD"
        - name: LOGSENDPOINT
          value: "$LOGSENDPOINT"
        - name: TRACESUSER
          value: "$TRACESUSER"
        - name: TRACESPASSWORD
          value: "$TRACESPASSWORD"
        - name: TRACESENDPOINT
          value: "$TRACESENDPOINT"
        - name: OTEL_SERVICE_NAME
          value: "pita"
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: "http://localhost:4317"
        - name: OTEL_TRACES_EXPORTER
          value: "$OTEL_TRACES_EXPORTER"
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "$OTEL_EXPORTER_OTLP_INSECURE"
        - name: SLEEPURL
          value: "$SLEEPURL"
        ports:
        - containerPort: 3000
        volumeMounts:
            - name: sslrootcert
              mountPath: /tmp/cert1
            - name: sslcert
              mountPath: /tmp/cert2
            - name: sslkey
              mountPath: /tmp/cert3
      volumes:
        - name: sslrootcert
          configMap:
            defaultMode: 420
            name: sslrootcert
        - name: sslcert
          configMap:
            defaultMode: 420
            name: sslcert
        - name: sslkey
          configMap:
            defaultMode: 420
            name: sslkey 
---
apiVersion: v1
kind: Service
metadata:
  name: pita
spec:
  selector:
    app: pita
    component: appserver 
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
  sessionAffinity: None
  type: ClusterIP
